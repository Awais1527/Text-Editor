{"version":3,"sources":["components/Aboutus.js","components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Aboutus","props","mystyle","color","mode","backgroundColor","mystyle2","paddingRight","paddingLeft","React","createElement","style","className","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Alert","height","alert","concat","role","msg","Navbar","Link","to","title","aria-label","aria-current","home","onClick","changeMode","htmlFor","defaultProps","TextForm","text","setText","useState","button","outline","boxShadow","border","value","onChange","event","target","rows","placeholder","handleUpFun","newText","toUpperCase","showAlert","disabled","length","handleLoFun","toLowerCase","handleCopy","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","handleClear","handleCapital","arr","split","i","charAt","slice","newtet","join","handleSpaces","words","joinedWords","forEach","elem","undefined","console","log","textToSpeech","Speech","SpeechSynthesisUtterance","message","lang","window","speechSynthesis","speak","replaceString","repval","prompt","tobereplaced","RegExp","toreplace","replace","filter","element","App","alertMsg","setAlertMsg","setTimeout","setMode","Fragment","BrowserRouter","body","Routes","Route","path","exact","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.3f5d395e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Aboutus(props) {\r\n    // const [btntext, setBtnText] = useState(\"Enable Dark Mode\")\r\n\r\n    // const [mystyle, setMyStyle] = useState({\r\n    //     color: props.mode === \"dark\"? \"white\":\"black\",\r\n    //     backgroundColor: props.mode === \"dark\"? \"white\":\"black\",\r\n    // });\r\n\r\n    // const changeColor = ()=>{\r\n    //     if(mystyle.color === \"black\"){\r\n    //         setMyStyle({\r\n    //             color: \"white\",\r\n    //     backgroundColor: \"black\",\r\n    //     border: \"1px solid white\"\r\n\r\n    //         })\r\n    //         setBtnText(\"Enable Light Mode\")\r\n    //     }else{\r\n    //         setMyStyle({\r\n    //             color: \"black\",\r\n    //             backgroundColor: \"white\",\r\n    //         })\r\n    //         setBtnText(\"Enable Dark Mode\")\r\n    //     }\r\n\r\n    // }\r\n    let mystyle = {\r\n      color: props.mode === \"dark\"? \"white\":\"black\",\r\n      backgroundColor: props.mode === \"dark\"? \"#0d2d48\":\"white\",\r\n     \r\n\r\n    }\r\n    let mystyle2 = {\r\n      color: props.mode === \"dark\"? \"white\":\"black\",\r\n      backgroundColor: props.mode === \"dark\"? \"#0d2d48\":\"white\",\r\n     \r\n      paddingRight:0 ,paddingLeft: 0\r\n    }\r\n  \r\n  return (\r\n    <div style={ mystyle2 } className='container' >\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n      <button\r\n      style={mystyle}\r\n        className=\"accordion-button\"\r\n        type=\"button\"\r\n        data-bs-toggle=\"collapse\"\r\n        data-bs-target=\"#collapseOne\"\r\n        aria-expanded=\"true\"\r\n        aria-controls=\"collapseOne\"\r\n      >\r\n        Words & Characters\r\n      </button>\r\n    </h2>\r\n    <div\r\n    \r\n      id=\"collapseOne\"\r\n      className=\"accordion-collapse collapse show\"\r\n      aria-labelledby=\"headingOne\"\r\n      data-bs-parent=\"#accordionExample\"\r\n    >\r\n      <div className=\"accordion-body\"style={mystyle}>\r\n       This website can calculate the <strong>Words & Characters</strong> in the text.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n      <button\r\n        className=\"accordion-button collapsed\"\r\n        type=\"button\"\r\n        data-bs-toggle=\"collapse\"\r\n        data-bs-target=\"#collapseTwo\"\r\n        aria-expanded=\"false\"\r\n        aria-controls=\"collapseTwo\"\r\n        style={mystyle}\r\n      >\r\n        Uppercase & Lowercase\r\n      </button>\r\n    </h2>\r\n    <div\r\n      id=\"collapseTwo\"\r\n      className=\"accordion-collapse collapse\"\r\n      aria-labelledby=\"headingTwo\"\r\n      data-bs-parent=\"#accordionExample\"\r\n    >\r\n      <div className=\"accordion-body\"style={mystyle}>\r\n        Convert Text in <strong>Uppercase & Lowercase</strong> .\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n      <button\r\n        className=\"accordion-button collapsed\"\r\n        type=\"button\"\r\n        data-bs-toggle=\"collapse\"\r\n        data-bs-target=\"#collapseThree\"\r\n        aria-expanded=\"false\"\r\n        aria-controls=\"collapseThree\"\r\n        style={mystyle}\r\n      >\r\n        Text to Speech\r\n      </button>\r\n    </h2>\r\n    <div\r\n      id=\"collapseThree\"\r\n      className=\"accordion-collapse collapse\"\r\n      aria-labelledby=\"headingThree\"\r\n      data-bs-parent=\"#accordionExample\"\r\n    >\r\n      <div className=\"accordion-body\"style={mystyle}>\r\n       Convert <strong>Text into Speech</strong> \r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n{/* <button className=\"my-3 btn btn-primary mx-2\" onClick={changeColor} >\r\n          {btntext}\r\n        </button> */}\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    <div style={{height : '70px'}}>\r\n { props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{props.alert.type}</strong> : {props.alert.msg}\r\n  {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n</div>}\r\n</div>\r\n  )\r\n}\r\n// \"start\": \"react-scripts start\",","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n// ${props.mode==='dark'?'light':'dark'}\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n       <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        {props.title}\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-bs-toggle=\"collapse\"\r\n        data-bs-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\" />\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/aboutus\">\r\n              {props.home}\r\n            </Link>\r\n          </li>\r\n          \r\n            </ul>\r\n          \r\n   \r\n        <form className=\"d-flex\">\r\n        <div className=\"form-check form-switch\">\r\n  <input\r\n  onClick={props.changeMode}\r\n    className=\"form-check-input\"\r\n    type=\"checkbox\"\r\n    role=\"switch\"\r\n    id=\"flexSwitchCheckDefault\"\r\n  />\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" style={{color: props.mode === \"dark\"? \"white\":\"black\"}} >\r\n    {  props.mode ===\"dark\" ?  \"Disable Dark mode\":\"Enable Dark Mode\"}\r\n  </label>\r\n</div>\r\n\r\n          \r\n         \r\n        </form>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  \r\n  \r\n    </div>\r\n  )\r\n}\r\nNavbar.propTypes={\r\n    title: PropTypes.string.isRequired,\r\n    home: PropTypes.string,\r\n}\r\nNavbar.defaultProps={\r\n    title: \"set title\",\r\n    home: \"set home\"\r\n}","import React, { useState } from \"react\";\r\nimport './TextForm.css';\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleUpFun = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert('Converted to Uppercase','success')\r\n  };\r\n\r\n  const handleLoFun = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert('Converted to Lowercase','success')\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    var text = document.getElementById(\"mybox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value)\r\n     document.getSelection().removeAllRanges() \r\n    props.showAlert('Text Copied','success')\r\n    \r\n  };\r\n\r\n  const handleClear = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert('Text Cleared','success')\r\n  };\r\n  const handleSpaces =()=>{\r\n    let words = text.split(' ');\r\n    let joinedWords = '';\r\n    words.forEach((elem)=>{\r\n        if(elem[0] !== undefined){\r\n            joinedWords += elem + \" \";\r\n            console.log(joinedWords);\r\n        }\r\n        props.showAlert('Removed Extra Spaces','success')\r\n    })\r\n    setText(joinedWords);\r\n    };\r\n    const textToSpeech=()=>{\r\n      const Speech= new SpeechSynthesisUtterance();\r\n      const message= document.getElementById(\"mybox\").value;\r\n      Speech.lang='eng';\r\n      Speech.text= message;\r\n      window.speechSynthesis.speak(Speech);\r\n      props.showAlert('Text Converted into Speech','success')\r\n    }\r\n    \r\n\r\n\r\nconst replaceString=()=>{\r\n      let repval=prompt(\"Enter the word to be replaced:\")\r\n      let tobereplaced= new RegExp(repval,'g');\r\n\r\n      let toreplace=prompt(\"Enter the text that you want to replace with:\");\r\n      \r\n      let newText= text.replace(tobereplaced,toreplace);\r\n      setText(newText);\r\n      props.showAlert('Word Replaced','success')\r\n    }\r\n\r\n  const handleCapital = () =>{\r\n    const arr = text.split(\" \")\r\n    for(var i =0;i<arr.length;i++){\r\n      arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1)\r\n    }\r\n\r\n    const newtet = arr.join(\" \")\r\n    setText(newtet)\r\n    props.showAlert('First letter is Capitilized','success')\r\n  }\r\n  \r\n\r\n  const button = {\r\n   outline: 'none', boxShadow: 'none',\r\n    \r\n    color: \"white\",\r\n    backgroundColor: props.mode === \"dark\"? \"rgb(71 105 133)\":\"#838583\",\r\n     \r\n    border: \"0\"}\r\n  return (\r\n    <div style={{color: props.mode === \"dark\"? \"white\":\"black\"}}>\r\n      <div className=\"mb-3 container\">\r\n        <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">\r\n          Example textarea\r\n        </label>\r\n        <textarea\r\n       \r\n          className=\"form-control custom-textarea \"\r\n          id=\"mybox\"\r\n          value={text}\r\n          onChange={handleOnChange}\r\n          rows={10}\r\n          placeholder=\"Enter Text Here\"\r\n          style={{backgroundColor: props.mode === \"dark\"? \"#0d2d48\":\"white\", color: props.mode === \"dark\"? \"white\":\"black\"}}\r\n        />\r\n\r\n        <button className=\"my-3 btn btn-primary mx-2 \" onClick={handleUpFun} style={button } disabled={text.length === 0}  >\r\n          Uppercase\r\n        </button>\r\n        <button className=\"my-3 btn btn-primary mx-2\" onClick={handleLoFun} style={button} disabled={text.length === 0}>\r\n          Lowercase\r\n        </button>\r\n        <button className=\"my-3 btn btn-primary mx-2\" onClick={handleCopy} style={button} disabled={text.length === 0}>\r\n          Copy to Clipboard\r\n        </button>\r\n        <button className=\"my-3 btn btn-primary mx-2\" onClick={handleClear} style={button} disabled={text.length === 0}>\r\n          Clear\r\n        </button>\r\n        <button className=\"my-3 btn btn-primary mx-2\" onClick={handleCapital} style={button} disabled={text.length === 0}>\r\n          Capital First letter of words\r\n        </button>\r\n        <button className=\"my-3 btn btn-primary mx-2\" onClick={handleSpaces} style={button} disabled={text.length === 0}>\r\n          Remove Extra Spaces\r\n        </button>\r\n        <button className=\"my-3 btn btn-primary mx-2\" onClick={textToSpeech} style={button} disabled={text.length === 0}>\r\n          Text to Speech\r\n        </button>\r\n        <button className=\"my-3 btn btn-primary mx-2\" onClick={replaceString} style={button} disabled={text.length === 0}>\r\n        Replace words\r\n        </button>\r\n       \r\n        \r\n        \r\n      </div>\r\n      <div className=\"container\">\r\n        <h2>Text Summary</h2>\r\n        <p>\r\n          {text.split(\" \").filter((element)=>{return element.length !==0}).length} Words and {text.length} Characters\r\n        </p>\r\n        \r\n        <h2>Preview</h2>\r\n        <p>{ text.length >0 ? text:\"Enter Text to Preview\"}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","\nimport './App.css';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Aboutus from './components/Aboutus';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React ,{useState}from 'react'\n\n\nfunction App() {\n\nconst [alertMsg, setAlertMsg]=useState(null);\n\nconst showAlert=(message,type)=>{\nsetAlertMsg({\n  msg : message,\n  type:type\n})\nsetTimeout(() => {\n  setAlertMsg(null)\n}, 1500);\n\n}\n\n\n\n\n\n\n\n\n\n\n\n  const [mode, setMode] = useState(\"light\");\n  const changeMode= ()=>{\n  if(mode==='light'){\n    setMode('dark');\n    document.body.style.backgroundColor= \"#04415c\";\n    showAlert('Dark Mode is enabled','success')\n  }else{\n    setMode('light');\n    document.body.style.backgroundColor= \"white\";\n    showAlert('Light Mode is enabled','success')\n  }\n}\n  return (\n    <>\n   \n   \n \n\n\n   <BrowserRouter>\n   <Navbar title=\"Home\" home=\"About\" mode={mode} changeMode= {changeMode} />\n   <Alert alert={alertMsg}/>\n      <Routes>\n        <Route path=\"/\" element={<TextForm showAlert={showAlert} mode={mode} />}/>\n        <Route exact path=\"/aboutus\" element={<Aboutus  mode={mode} />} />\n      </Routes>\n    </BrowserRouter>\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}